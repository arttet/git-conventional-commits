name: build

on:
  push:
    branches: [main]
  pull_request:
  schedule:
    # https://crontab.guru/
    # At 12:00 AM, only on Monday
    - cron: 0 0 * * 1

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Check Rust formatting
        run: cargo fmt --all -- --check

  lint:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Run Clippy
        run: cargo clippy -- --deny warnings

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Run unit tests
        run: cargo test

      - name: Build
        run: cargo build

  coverage:
    runs-on: ubuntu-latest
    needs: [fmt, lint, build]
    env:
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -C instrument-coverage
      LLVM_PROFILE_FILE: coverage-%p-%m.profraw

    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: llvm-tools-preview

      - name: Install latest grcov
        uses: actions-rs/install@v0.1
        with:
          crate: grcov
          version: latest
          use-tool-cache: true

      - name: Build code coverage
        run: |
          cargo test
          grcov . --binary-path ./target/debug/ -s . -t html --branch --ignore-not-existing --ignore "*cargo*" -o ./coverage/
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "*cargo*" -o coverage.lcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.lcov
          flags: unittests
          name: codecov-umbrella
          verbose: true
          fail_ci_if_error: true

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage
